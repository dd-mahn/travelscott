import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import BlogType from 'src/types/Blog';

// Define the state interface for the blog slice
interface BlogState {
  allBlogs: BlogType[];
  inspirationCatalogBlogs: BlogType[];
  featuredBlogs: BlogType[];
  starterBlogs: BlogType[];
  homeBlogs: BlogType[];
  blogChunks: BlogType[][];
}

// Initialize the state with default values
const initialState: BlogState = {
  allBlogs: [],
  inspirationCatalogBlogs: [],
  featuredBlogs: [],
  starterBlogs: [],
  homeBlogs: [],
  blogChunks: [],
};

// Create the blog slice with reducers to handle state changes
const blogSlice = createSlice({
  name: 'blog',
  initialState,
  reducers: {
    // Set the list of all blogs
    setAllBlogs: (state, action: PayloadAction<BlogType[]>) => {
      state.allBlogs = action.payload;
    },
    // Set the list of inspiration catalog blogs
    setInspirationCatalogBlogs: (state, action: PayloadAction<BlogType[]>) => {
      state.inspirationCatalogBlogs = action.payload;
    },
    // Set the list of featured blogs
    setFeaturedBlogs: (state, action: PayloadAction<BlogType[]>) => {
      state.featuredBlogs = action.payload;
    },
    // Set the list of starter blogs
    setStarterBlogs: (state, action: PayloadAction<BlogType[]>) => {
      state.starterBlogs = action.payload;
    },
    // Set the list of home blogs
    setHomeBlogs: (state, action: PayloadAction<BlogType[]>) => {
      state.homeBlogs = action.payload;
    },
    // Set the list of blog chunks
    setBlogChunks: (state, action: PayloadAction<BlogType[][]>) => {
      state.blogChunks = action.payload;
    },
  },
});

// Export the actions generated by createSlice
export const {
  setAllBlogs,
  setFeaturedBlogs,
  setInspirationCatalogBlogs,
  setStarterBlogs,
  setHomeBlogs,
  setBlogChunks
} = blogSlice.actions;

// Export the reducer to be used in the store
export default blogSlice.reducer;
