import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import Country from "src/types/Country";
import Destination from "src/types/Destination";
import Blog from "src/types/Blog";

// Define the initial state of the country slice
interface CountryState {
  currentCountry: Country | null;
  countries: Country[];
  countryDestinations: Destination[];
  countryBlogs: Blog[];
  loading: boolean;
  error: string | null;
}

// Initialize the state with default values
const initialState: CountryState = {
  currentCountry: null,
  countries: [],
  countryDestinations: [],
  countryBlogs: [],
  loading: false,
  error: null,
};

// Create the country slice with reducers to handle state changes
const countrySlice = createSlice({
  name: "country",
  initialState,
  reducers: {
    // Set the current country
    setCurrentCountry: (state, action: PayloadAction<Country | null>) => {
      state.currentCountry = action.payload;
    },
    // Set the list of countries
    setCountries: (state, action: PayloadAction<Country[]>) => {
      state.countries = action.payload;
    },
    // Set the destinations for the current country
    setCountryDestinations: (state, action: PayloadAction<Destination[]>) => {
      state.countryDestinations = action.payload;
    },
    // Set the blogs for the current country
    setCountryBlogs: (state, action: PayloadAction<Blog[]>) => {
      state.countryBlogs = action.payload;
    },
    // Set the loading state
    setLoading: (state, action: PayloadAction<boolean>) => {
      state.loading = action.payload;
    },
    // Set the error message
    setError: (state, action: PayloadAction<string | null>) => {
      state.error = action.payload;
    },
  },
});

// Export the actions generated by createSlice
export const {
  setCurrentCountry,
  setCountries,
  setCountryDestinations,
  setCountryBlogs,
  setLoading,
  setError,
} = countrySlice.actions;

// Export the reducer to be used in the store
export default countrySlice.reducer;
